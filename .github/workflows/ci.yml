name: WSO2 MI CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: wso2mi-mssql
  IMAGE_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: YourStrong!Passw0rd
        ports:
          - 1433:1433
        options: >-
          --health-cmd "timeout 5 bash -c 'echo > /dev/tcp/localhost/1433'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      # 1. Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Set up JDK & Maven
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      # 3. Build CAR
      - name: Build CAR
        run: mvn clean package

      # 4. Build Docker image with CAR
      - name: Build Docker Image
        run: |
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          FULL_IMAGE_NAME="$REGISTRY/$OWNER_LC/${IMAGE_NAME}:${IMAGE_TAG}"
          docker build \
            --build-arg BASE_IMAGE=wso2/wso2mi:4.4.0 \
            -f deployment/docker/Dockerfile \
            -t "$FULL_IMAGE_NAME" \
            .

      # 5. Log in to GHCR
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 6. Push image to GHCR
      - name: Push Docker Image
        run: |
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          FULL_IMAGE_NAME="$REGISTRY/$OWNER_LC/${IMAGE_NAME}:${IMAGE_TAG}"
          docker push "$FULL_IMAGE_NAME"

      # 7. Run MI locally for testing
      - name: Run WSO2 MI (Local Test)
        run: |
          docker run -d --name wso2mi-test \
          -p 8290:8290 -p 8253:8253 \
          -v ${{ github.workspace }}/target:/home/wso2carbon/wso2mi/repository/deployment/server/carbonapps \
          wso2/wso2mi:4.4.0

      # 8. Wait for MI startup
      - name: Wait for MI
        run: sleep 60

      # 9. Test API endpoint
      - name: Test Data Service
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8290/services/mssql/data)
          if [ "$RESPONSE" -ne 200 ]; then
            echo "❌ API test failed with HTTP code $RESPONSE"
            exit 1
          fi
          echo "✅ API test passed"
